{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\swamy.LAPTOP-0RVCTRRS\\\\OneDrive\\\\Desktop\\\\Dailyfix Nexus\\\\src\\\\components\\\\ConversationView\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useState, useRef, useEffect } from 'react';\nimport { AIFeatures } from '../AIFeatures';\n\n// Add type definitions for Web Speech API\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ConversationView = ({\n  conversation\n}) => {\n  _s();\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [isVoiceCommand, setIsVoiceCommand] = useState(false);\n  const [messageText, setMessageText] = useState('');\n  const [recordedAudio, setRecordedAudio] = useState(null);\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const speechRecognitionRef = useRef(null);\n  useEffect(() => {\n    // Initialize speech recognition\n    if ('SpeechRecognition' in window || 'webkitSpeechRecognition' in window) {\n      const SpeechRecognitionAPI = window.SpeechRecognition || window.webkitSpeechRecognition;\n      if (SpeechRecognitionAPI) {\n        speechRecognitionRef.current = new SpeechRecognitionAPI();\n        speechRecognitionRef.current.continuous = true;\n        speechRecognitionRef.current.interimResults = true;\n        speechRecognitionRef.current.onresult = event => {\n          const results = Array.from(event.results);\n          const transcript = results.map(result => result[0].transcript).join('');\n          if (event.results[0].isFinal) {\n            handleVoiceCommand(transcript.toLowerCase());\n          }\n        };\n        speechRecognitionRef.current.onerror = event => {\n          console.error('Speech recognition error:', event.error);\n          setIsVoiceCommand(false);\n        };\n      }\n    }\n  }, []);\n  const handleVoiceCommand = command => {\n    // Handle voice commands\n    if (command.includes('tag') || command.includes('label')) {\n      var _command$split$pop, _command$split$pop2;\n      const tag = ((_command$split$pop = command.split('tag').pop()) === null || _command$split$pop === void 0 ? void 0 : _command$split$pop.trim()) || ((_command$split$pop2 = command.split('label').pop()) === null || _command$split$pop2 === void 0 ? void 0 : _command$split$pop2.trim());\n      if (tag) {\n        console.log('Adding tag:', tag);\n        alert(`Added tag: ${tag}`);\n      }\n    } else if (command.includes('reply to')) {\n      var _command$split$pop3;\n      const message = (_command$split$pop3 = command.split('reply to').pop()) === null || _command$split$pop3 === void 0 ? void 0 : _command$split$pop3.trim();\n      if (message) {\n        setMessageText(`Replying to: \"${message}\"`);\n      }\n    } else if (command.includes('search for')) {\n      var _command$split$pop4;\n      const query = (_command$split$pop4 = command.split('search for').pop()) === null || _command$split$pop4 === void 0 ? void 0 : _command$split$pop4.trim();\n      if (query) {\n        handleSettingsClick('search');\n      }\n    } else if (command.includes('clear chat')) {\n      handleSettingsClick('clear');\n    } else if (command.includes('export chat')) {\n      handleSettingsClick('export');\n    } else {\n      // If no command detected, treat as message text\n      setMessageText(command);\n    }\n    setIsVoiceCommand(false);\n  };\n  const startVoiceCommand = () => {\n    if (speechRecognitionRef.current) {\n      setIsVoiceCommand(true);\n      speechRecognitionRef.current.start();\n    } else {\n      alert('Speech recognition is not supported in your browser');\n    }\n  };\n  const stopVoiceCommand = () => {\n    if (speechRecognitionRef.current) {\n      speechRecognitionRef.current.stop();\n      setIsVoiceCommand(false);\n    }\n  };\n  const handleSendMessage = () => {\n    if (recordedAudio) {\n      // Send voice message\n      console.log('Sending voice message:', recordedAudio.blob);\n      setRecordedAudio(null);\n    } else if (messageText.trim()) {\n      // Send text message\n      const newMessage = {\n        id: Date.now().toString(),\n        text: messageText,\n        sender: 'user',\n        time: new Date(),\n        platform: (conversation === null || conversation === void 0 ? void 0 : conversation.platforms[0]) || 'WhatsApp'\n      };\n      console.log('Sending text message:', newMessage);\n      setMessageText('');\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      audioChunksRef.current = [];\n      mediaRecorder.ondataavailable = event => {\n        if (event.data.size > 0) {\n          audioChunksRef.current.push(event.data);\n        }\n      };\n      mediaRecorder.onstop = () => {\n        const audioBlob = new Blob(audioChunksRef.current, {\n          type: 'audio/wav'\n        });\n        const audioUrl = URL.createObjectURL(audioBlob);\n        setRecordedAudio({\n          blob: audioBlob,\n          url: audioUrl\n        });\n      };\n      mediaRecorder.start();\n      setIsRecording(true);\n    } catch (error) {\n      console.error('Error accessing microphone:', error);\n      alert('Unable to access microphone. Please check permissions.');\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n      setIsRecording(false);\n    }\n  };\n  const handleVoiceButtonClick = () => {\n    if (isRecording) {\n      stopRecording();\n    } else {\n      startRecording();\n    }\n  };\n  const handleSettingsClick = action => {\n    switch (action) {\n      case 'search':\n        const searchText = prompt('Enter text to search in chat:');\n        if (searchText) {\n          alert(`Searching for: ${searchText}`);\n        }\n        break;\n      case 'media':\n        alert('Opening media gallery');\n        break;\n      case 'clear':\n        if (window.confirm('Are you sure you want to clear this chat?')) {\n          alert('Chat cleared');\n        }\n        break;\n      case 'block':\n        if (window.confirm('Are you sure you want to block this contact?')) {\n          alert('Contact blocked');\n        }\n        break;\n      case 'export':\n        alert('Exporting chat...');\n        break;\n      case 'mute':\n        alert('Notifications muted');\n        break;\n    }\n    setIsSettingsOpen(false);\n  };\n  const handleAIReplySelect = reply => {\n    setMessageText(reply); // This will update the message input\n  };\n  if (!conversation) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversation-placeholder\",\n      children: \"Select a conversation to start messaging\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conversation-view\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversation-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sender-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: conversation.contact.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"platform-badges\",\n            children: conversation.platforms.map(platform => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `platform-badge ${platform.toLowerCase()}`,\n              children: platform\n            }, platform, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings-menu\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"settings-button\",\n            onClick: () => setIsSettingsOpen(!isSettingsOpen),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"settings\",\n              children: \"\\u22EE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), isSettingsOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-options-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"header-option\",\n              onClick: () => handleSettingsClick('search'),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"option-icon\",\n                children: \"\\uD83D\\uDD0D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 19\n              }, this), \"Search\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"header-option\",\n              onClick: () => handleSettingsClick('media'),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"option-icon\",\n                children: \"\\uD83D\\uDCCE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 19\n              }, this), \"Media, links & docs\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"header-option\",\n              onClick: () => handleSettingsClick('mute'),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"option-icon\",\n                children: \"\\uD83D\\uDD15\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 19\n              }, this), \"Mute notifications\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"header-option\",\n              onClick: () => handleSettingsClick('export'),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"option-icon\",\n                children: \"\\uD83D\\uDCE4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 19\n              }, this), \"Export chat\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"header-option dangerous\",\n              onClick: () => handleSettingsClick('clear'),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"option-icon\",\n                children: \"\\uD83D\\uDDD1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 19\n              }, this), \"Clear chat\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"header-option dangerous\",\n              onClick: () => handleSettingsClick('block'),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"option-icon\",\n                children: \"\\u26D4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 19\n              }, this), \"Block contact\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-history\",\n      children: conversation.messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-item ${msg.platform.toLowerCase()}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-bubble\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-time\",\n              children: msg.time.toLocaleTimeString([], {\n                hour: '2-digit',\n                minute: '2-digit'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `platform-indicator ${msg.platform.toLowerCase()}`,\n              children: msg.platform\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AIFeatures, {\n      conversation: conversation,\n      onReplySelect: handleAIReplySelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input-container\",\n      children: [recordedAudio ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recorded-audio\",\n        children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n          src: recordedAudio.url,\n          controls: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-audio\",\n          onClick: () => setRecordedAudio(null),\n          title: \"Cancel\",\n          children: \"\\u274C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: `message-input ${isVoiceCommand ? 'voice-active' : ''}`,\n          placeholder: isVoiceCommand ? 'Listening for voice command...' : 'Type a message or use voice command...',\n          value: messageText,\n          onChange: e => setMessageText(e.target.value),\n          onKeyPress: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `voice-command-button ${isVoiceCommand ? 'active' : ''}`,\n          title: isVoiceCommand ? 'Stop Voice Command' : 'Start Voice Command',\n          onClick: () => isVoiceCommand ? stopVoiceCommand() : startVoiceCommand(),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"voice-command\",\n            children: isVoiceCommand ? '🎙️' : '🗣️'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `voice-button ${isRecording ? 'recording' : ''}`,\n        title: isRecording ? 'Stop Recording' : 'Start Voice Recording',\n        onClick: handleVoiceButtonClick,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"voice\",\n          children: isRecording ? '⏹️' : '🎤'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `send-button ${messageText.trim() || recordedAudio ? 'active' : ''}`,\n        onClick: handleSendMessage,\n        disabled: !messageText.trim() && !recordedAudio,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"send\",\n          children: \"\\uD83D\\uDCE4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 5\n  }, this);\n};\n\n// Helper function to generate AI replies (mock implementation)\n_s(ConversationView, \"KW3T/x2780Gqu6q1hXudshXenuc=\");\n_c = ConversationView;\nconst generateAIReplies = async messages => {\n  // In a real implementation, this would call your AI service\n  const commonReplies = [\"I'll look into this and get back to you shortly\", \"Thanks for bringing this to my attention\", \"Could you clarify your requirements?\", \"Let me check with the team and update you\", \"I understand, I'll prioritize this task\", \"Would you like to schedule a call to discuss this?\"];\n\n  // Simulate API delay\n  await new Promise(resolve => setTimeout(resolve, 1000));\n\n  // Return 3 random replies\n  return commonReplies.sort(() => Math.random() - 0.5).slice(0, 3);\n};\nvar _c;\n$RefreshReg$(_c, \"ConversationView\");","map":{"version":3,"names":["React","useState","useRef","useEffect","AIFeatures","jsxDEV","_jsxDEV","Fragment","_Fragment","ConversationView","conversation","_s","isSettingsOpen","setIsSettingsOpen","isRecording","setIsRecording","isVoiceCommand","setIsVoiceCommand","messageText","setMessageText","recordedAudio","setRecordedAudio","mediaRecorderRef","audioChunksRef","speechRecognitionRef","window","SpeechRecognitionAPI","SpeechRecognition","webkitSpeechRecognition","current","continuous","interimResults","onresult","event","results","Array","from","transcript","map","result","join","isFinal","handleVoiceCommand","toLowerCase","onerror","console","error","command","includes","_command$split$pop","_command$split$pop2","tag","split","pop","trim","log","alert","_command$split$pop3","message","_command$split$pop4","query","handleSettingsClick","startVoiceCommand","start","stopVoiceCommand","stop","handleSendMessage","blob","newMessage","id","Date","now","toString","text","sender","time","platform","platforms","handleKeyPress","e","key","shiftKey","preventDefault","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","mediaRecorder","MediaRecorder","ondataavailable","data","size","push","onstop","audioBlob","Blob","type","audioUrl","URL","createObjectURL","url","stopRecording","getTracks","forEach","track","handleVoiceButtonClick","action","searchText","prompt","confirm","handleAIReplySelect","reply","className","children","fileName","_jsxFileName","lineNumber","columnNumber","contact","name","onClick","role","messages","msg","index","toLocaleTimeString","hour","minute","onReplySelect","src","controls","title","placeholder","value","onChange","target","onKeyPress","disabled","_c","generateAIReplies","commonReplies","Promise","resolve","setTimeout","sort","Math","random","slice","$RefreshReg$"],"sources":["C:/Users/swamy.LAPTOP-0RVCTRRS/OneDrive/Desktop/Dailyfix Nexus/src/components/ConversationView/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useState, useRef, useEffect } from 'react';\nimport { AIFeatures } from '../AIFeatures';\nimport type { Conversation } from '../../types/conversation';\n\n// Add type definitions for Web Speech API\ninterface SpeechRecognitionEvent extends Event {\n  results: SpeechRecognitionResultList;\n  resultIndex: number;\n}\n\ninterface SpeechRecognitionError extends Event {\n  error: string;\n  message: string;\n}\n\ninterface SpeechRecognitionResult {\n  isFinal: boolean;\n  [index: number]: SpeechRecognitionAlternative;\n}\n\ninterface SpeechRecognitionAlternative {\n  transcript: string;\n  confidence: number;\n}\n\ninterface SpeechRecognitionResultList {\n  length: number;\n  item(index: number): SpeechRecognitionResult;\n  [index: number]: SpeechRecognitionResult;\n}\n\ninterface SpeechRecognition extends EventTarget {\n  continuous: boolean;\n  interimResults: boolean;\n  lang: string;\n  onresult: (event: SpeechRecognitionEvent) => void;\n  onerror: (event: SpeechRecognitionError) => void;\n  start(): void;\n  stop(): void;\n  abort(): void;\n}\n\ninterface SpeechRecognitionConstructor {\n  new (): SpeechRecognition;\n}\n\ndeclare global {\n  interface Window {\n    SpeechRecognition?: SpeechRecognitionConstructor;\n    webkitSpeechRecognition?: SpeechRecognitionConstructor;\n  }\n}\n\ninterface Message {\n  id: string;\n  text: string;\n  sender: 'user' | 'contact';\n  timestamp: Date;\n  platform: string;\n}\n\ninterface ConversationViewProps {\n  conversation: Conversation | null;\n}\n\nexport const ConversationView: React.FC<ConversationViewProps> = ({ conversation }) => {\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [isVoiceCommand, setIsVoiceCommand] = useState(false);\n  const [messageText, setMessageText] = useState('');\n  const [recordedAudio, setRecordedAudio] = useState<{ blob: Blob; url: string } | null>(null);\n  const mediaRecorderRef = useRef<MediaRecorder | null>(null);\n  const audioChunksRef = useRef<Blob[]>([]);\n  const speechRecognitionRef = useRef<SpeechRecognition | null>(null);\n\n  useEffect(() => {\n    // Initialize speech recognition\n    if ('SpeechRecognition' in window || 'webkitSpeechRecognition' in window) {\n      const SpeechRecognitionAPI = window.SpeechRecognition || window.webkitSpeechRecognition;\n      if (SpeechRecognitionAPI) {\n        speechRecognitionRef.current = new SpeechRecognitionAPI();\n        speechRecognitionRef.current.continuous = true;\n        speechRecognitionRef.current.interimResults = true;\n\n        speechRecognitionRef.current.onresult = (event: SpeechRecognitionEvent) => {\n          const results = Array.from(event.results);\n          const transcript = results\n            .map(result => result[0].transcript)\n            .join('');\n\n          if (event.results[0].isFinal) {\n            handleVoiceCommand(transcript.toLowerCase());\n          }\n        };\n\n        speechRecognitionRef.current.onerror = (event: SpeechRecognitionError) => {\n          console.error('Speech recognition error:', event.error);\n          setIsVoiceCommand(false);\n        };\n      }\n    }\n  }, []);\n\n  const handleVoiceCommand = (command: string) => {\n    // Handle voice commands\n    if (command.includes('tag') || command.includes('label')) {\n      const tag = command.split('tag').pop()?.trim() || command.split('label').pop()?.trim();\n      if (tag) {\n        console.log('Adding tag:', tag);\n        alert(`Added tag: ${tag}`);\n      }\n    } else if (command.includes('reply to')) {\n      const message = command.split('reply to').pop()?.trim();\n      if (message) {\n        setMessageText(`Replying to: \"${message}\"`);\n      }\n    } else if (command.includes('search for')) {\n      const query = command.split('search for').pop()?.trim();\n      if (query) {\n        handleSettingsClick('search');\n      }\n    } else if (command.includes('clear chat')) {\n      handleSettingsClick('clear');\n    } else if (command.includes('export chat')) {\n      handleSettingsClick('export');\n    } else {\n      // If no command detected, treat as message text\n      setMessageText(command);\n    }\n    setIsVoiceCommand(false);\n  };\n\n  const startVoiceCommand = () => {\n    if (speechRecognitionRef.current) {\n      setIsVoiceCommand(true);\n      speechRecognitionRef.current.start();\n    } else {\n      alert('Speech recognition is not supported in your browser');\n    }\n  };\n\n  const stopVoiceCommand = () => {\n    if (speechRecognitionRef.current) {\n      speechRecognitionRef.current.stop();\n      setIsVoiceCommand(false);\n    }\n  };\n\n  const handleSendMessage = () => {\n    if (recordedAudio) {\n      // Send voice message\n      console.log('Sending voice message:', recordedAudio.blob);\n      setRecordedAudio(null);\n    } else if (messageText.trim()) {\n      // Send text message\n      const newMessage = {\n        id: Date.now().toString(),\n        text: messageText,\n        sender: 'user' as const,\n        time: new Date(),\n        platform: conversation?.platforms[0] || 'WhatsApp',\n      };\n      console.log('Sending text message:', newMessage);\n      setMessageText('');\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      audioChunksRef.current = [];\n\n      mediaRecorder.ondataavailable = (event) => {\n        if (event.data.size > 0) {\n          audioChunksRef.current.push(event.data);\n        }\n      };\n\n      mediaRecorder.onstop = () => {\n        const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/wav' });\n        const audioUrl = URL.createObjectURL(audioBlob);\n        setRecordedAudio({ blob: audioBlob, url: audioUrl });\n      };\n\n      mediaRecorder.start();\n      setIsRecording(true);\n    } catch (error) {\n      console.error('Error accessing microphone:', error);\n      alert('Unable to access microphone. Please check permissions.');\n    }\n  };\n\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n      setIsRecording(false);\n    }\n  };\n\n  const handleVoiceButtonClick = () => {\n    if (isRecording) {\n      stopRecording();\n    } else {\n      startRecording();\n    }\n  };\n\n  const handleSettingsClick = (action: string) => {\n    switch (action) {\n      case 'search':\n        const searchText = prompt('Enter text to search in chat:');\n        if (searchText) {\n          alert(`Searching for: ${searchText}`);\n        }\n        break;\n      case 'media':\n        alert('Opening media gallery');\n        break;\n      case 'clear':\n        if (window.confirm('Are you sure you want to clear this chat?')) {\n          alert('Chat cleared');\n        }\n        break;\n      case 'block':\n        if (window.confirm('Are you sure you want to block this contact?')) {\n          alert('Contact blocked');\n        }\n        break;\n      case 'export':\n        alert('Exporting chat...');\n        break;\n      case 'mute':\n        alert('Notifications muted');\n        break;\n    }\n    setIsSettingsOpen(false);\n  };\n\n  const handleAIReplySelect = (reply: string) => {\n    setMessageText(reply); // This will update the message input\n  };\n\n  if (!conversation) {\n    return (\n      <div className=\"conversation-placeholder\">\n        Select a conversation to start messaging\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"conversation-view\">\n      <div className=\"conversation-header\">\n        <div className=\"header-left\">\n          <div className=\"sender-info\">\n            <h2>{conversation.contact.name}</h2>\n            <div className=\"platform-badges\">\n              {conversation.platforms.map(platform => (\n                <span \n                  key={platform} \n                  className={`platform-badge ${platform.toLowerCase()}`}\n                >\n                  {platform}\n                </span>\n              ))}\n            </div>\n          </div>\n        </div>\n        <div className=\"header-actions\">\n          <div className=\"settings-menu\">\n            <button \n              className=\"settings-button\"\n              onClick={() => setIsSettingsOpen(!isSettingsOpen)}\n            >\n              <span role=\"img\" aria-label=\"settings\">⋮</span>\n            </button>\n            {isSettingsOpen && (\n              <div className=\"settings-options-row\">\n                <button className=\"header-option\" onClick={() => handleSettingsClick('search')}>\n                  <span className=\"option-icon\">🔍</span>\n                  Search\n                </button>\n                <button className=\"header-option\" onClick={() => handleSettingsClick('media')}>\n                  <span className=\"option-icon\">📎</span>\n                  Media, links & docs\n                </button>\n                <button className=\"header-option\" onClick={() => handleSettingsClick('mute')}>\n                  <span className=\"option-icon\">🔕</span>\n                  Mute notifications\n                </button>\n                <button className=\"header-option\" onClick={() => handleSettingsClick('export')}>\n                  <span className=\"option-icon\">📤</span>\n                  Export chat\n                </button>\n                <button className=\"header-option dangerous\" onClick={() => handleSettingsClick('clear')}>\n                  <span className=\"option-icon\">🗑️</span>\n                  Clear chat\n                </button>\n                <button className=\"header-option dangerous\" onClick={() => handleSettingsClick('block')}>\n                  <span className=\"option-icon\">⛔</span>\n                  Block contact\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"message-history\">\n        {conversation.messages.map((msg, index) => (\n          <div \n            key={index} \n            className={`message-item ${msg.platform.toLowerCase()}`}\n          >\n            <div className=\"message-bubble\">\n              <p>{msg.text}</p>\n              <div className=\"message-info\">\n                <span className=\"message-time\">\n                  {msg.time.toLocaleTimeString([], { \n                    hour: '2-digit', \n                    minute: '2-digit'\n                  })}\n                </span>\n                <span className={`platform-indicator ${msg.platform.toLowerCase()}`}>\n                  {msg.platform}\n                </span>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <AIFeatures \n        conversation={conversation} \n        onReplySelect={handleAIReplySelect}\n      />\n\n      <div className=\"message-input-container\">\n        {recordedAudio ? (\n          <div className=\"recorded-audio\">\n            <audio src={recordedAudio.url} controls />\n            <button \n              className=\"cancel-audio\"\n              onClick={() => setRecordedAudio(null)}\n              title=\"Cancel\"\n            >\n              ❌\n            </button>\n          </div>\n        ) : (\n          <>\n            <input \n              type=\"text\" \n              className={`message-input ${isVoiceCommand ? 'voice-active' : ''}`}\n              placeholder={isVoiceCommand ? 'Listening for voice command...' : 'Type a message or use voice command...'}\n              value={messageText}\n              onChange={(e) => setMessageText(e.target.value)}\n              onKeyPress={handleKeyPress}\n            />\n            <button \n              className={`voice-command-button ${isVoiceCommand ? 'active' : ''}`}\n              title={isVoiceCommand ? 'Stop Voice Command' : 'Start Voice Command'}\n              onClick={() => isVoiceCommand ? stopVoiceCommand() : startVoiceCommand()}\n            >\n              <span role=\"img\" aria-label=\"voice-command\">\n                {isVoiceCommand ? '🎙️' : '🗣️'}\n              </span>\n            </button>\n          </>\n        )}\n        <button \n          className={`voice-button ${isRecording ? 'recording' : ''}`}\n          title={isRecording ? 'Stop Recording' : 'Start Voice Recording'}\n          onClick={handleVoiceButtonClick}\n        >\n          <span role=\"img\" aria-label=\"voice\">\n            {isRecording ? '⏹️' : '🎤'}\n          </span>\n        </button>\n        <button \n          className={`send-button ${(messageText.trim() || recordedAudio) ? 'active' : ''}`}\n          onClick={handleSendMessage}\n          disabled={!messageText.trim() && !recordedAudio}\n        >\n          <span role=\"img\" aria-label=\"send\">📤</span>\n        </button>\n      </div>\n    </div>\n  );\n};\n\n// Helper function to generate AI replies (mock implementation)\nconst generateAIReplies = async (messages: any[]): Promise<string[]> => {\n  // In a real implementation, this would call your AI service\n  const commonReplies = [\n    \"I'll look into this and get back to you shortly\",\n    \"Thanks for bringing this to my attention\",\n    \"Could you clarify your requirements?\",\n    \"Let me check with the team and update you\",\n    \"I understand, I'll prioritize this task\",\n    \"Would you like to schedule a call to discuss this?\",\n  ];\n  \n  // Simulate API delay\n  await new Promise(resolve => setTimeout(resolve, 1000));\n  \n  // Return 3 random replies\n  return commonReplies\n    .sort(() => Math.random() - 0.5)\n    .slice(0, 3);\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}