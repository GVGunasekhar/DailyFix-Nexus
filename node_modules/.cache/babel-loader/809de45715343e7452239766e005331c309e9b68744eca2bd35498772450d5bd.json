{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\swamy.LAPTOP-0RVCTRRS\\\\OneDrive\\\\Desktop\\\\Dailyfix Nexus\\\\src\\\\components\\\\MessageList\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MessageList = ({\n  onConversationSelect,\n  onStatsUpdate\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Simulate API call to fetch messages\n    setTimeout(() => {\n      const mockMessages = generateMockMessages();\n      setMessages(mockMessages);\n      setLoading(false);\n\n      // Update stats\n      onStatsUpdate({\n        totalMessages: mockMessages.length,\n        highPriority: mockMessages.filter(m => m.priority === 'High').length,\n        pendingReplies: mockMessages.filter(m => m.isNew).length\n      });\n    }, 1000);\n  }, [onStatsUpdate]);\n  const handleMessageClick = message => {\n    const conversation = {\n      id: message.id,\n      contact: {\n        id: message.sender.name.toLowerCase().replace(' ', '-'),\n        name: message.sender.name\n      },\n      lastMessage: message.content,\n      platforms: message.platforms,\n      unreadCount: message.isNew ? 1 : 0,\n      priority: message.priority,\n      messages: message.messages || [],\n      aiSuggestions: [],\n      contextualTags: [],\n      lastInteraction: message.time\n    };\n    onConversationSelect(conversation);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages-list\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-messages\",\n      children: \"Loading messages...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this) : messages.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-item ${message.isNew ? 'unread' : ''}`,\n        onClick: () => handleMessageClick(message),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: message.sender.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-badges\",\n              children: [message.isNew && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"new-badge\",\n                children: \"New\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `priority-badge priority-${message.priority.toLowerCase()}`,\n                children: message.priority\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"message-preview\",\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"platform-badges\",\n              children: message.platforms.map(platform => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"platform-badge\",\n                \"data-platform\": platform,\n                children: platform\n              }, platform, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-time\",\n              children: message.time.toLocaleTimeString([], {\n                hour: '2-digit',\n                minute: '2-digit',\n                hour12: true\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-messages\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No conversations yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n// Helper function to generate mock messages\n_s(MessageList, \"iENrkQA4ceL8nzHtV8t1eR+7xGM=\");\n_c = MessageList;\nconst generateMockMessages = () => {\n  // ... existing mock data generation\n  return []; // Return your mock messages here\n};\nvar _c;\n$RefreshReg$(_c, \"MessageList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","MessageList","onConversationSelect","onStatsUpdate","_s","messages","setMessages","loading","setLoading","setTimeout","mockMessages","generateMockMessages","totalMessages","length","highPriority","filter","m","priority","pendingReplies","isNew","handleMessageClick","message","conversation","id","contact","sender","name","toLowerCase","replace","lastMessage","content","platforms","unreadCount","aiSuggestions","contextualTags","lastInteraction","time","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","platform","toLocaleTimeString","hour","minute","hour12","_c","$RefreshReg$"],"sources":["C:/Users/swamy.LAPTOP-0RVCTRRS/OneDrive/Desktop/Dailyfix Nexus/src/components/MessageList/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ConversationItem } from '../ConversationItem';\nimport type { Conversation, Platform, PriorityLevel } from '../../types/conversation';\nimport { useEffect, useState } from 'react';\n\ninterface MessageContent {\n  text: string;\n  platform: Platform;\n  time: Date;\n}\n\ninterface Message {\n  id: string;\n  sender: {\n    name: string;\n    initials: string;\n  };\n  content: string;\n  priority: PriorityLevel;\n  platforms: Platform[];\n  time: Date;\n  isNew?: boolean;\n  messages?: MessageContent[];\n}\n\ninterface MessageStats {\n  totalMessages: number;\n  highPriority: number;\n  pendingReplies: number;\n}\n\ninterface MessageListProps {\n  onConversationSelect: (conversation: Conversation) => void;\n  onStatsUpdate: (stats: MessageStats) => void;\n}\n\nexport const MessageList: React.FC<MessageListProps> = ({ \n  onConversationSelect,\n  onStatsUpdate\n}) => {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Simulate API call to fetch messages\n    setTimeout(() => {\n      const mockMessages = generateMockMessages();\n      setMessages(mockMessages);\n      setLoading(false);\n      \n      // Update stats\n      onStatsUpdate({\n        totalMessages: mockMessages.length,\n        highPriority: mockMessages.filter(m => m.priority === 'High').length,\n        pendingReplies: mockMessages.filter(m => m.isNew).length\n      });\n    }, 1000);\n  }, [onStatsUpdate]);\n\n  const handleMessageClick = (message: Message) => {\n    const conversation: Conversation = {\n      id: message.id,\n      contact: {\n        id: message.sender.name.toLowerCase().replace(' ', '-'),\n        name: message.sender.name\n      },\n      lastMessage: message.content,\n      platforms: message.platforms,\n      unreadCount: message.isNew ? 1 : 0,\n      priority: message.priority,\n      messages: message.messages || [],\n      aiSuggestions: [],\n      contextualTags: [],\n      lastInteraction: message.time\n    };\n    onConversationSelect(conversation);\n  };\n\n  return (\n    <div className=\"messages-list\">\n      {loading ? (\n        <div className=\"loading-messages\">Loading messages...</div>\n      ) : messages.length > 0 ? (\n        <div className=\"messages-container\">\n          {messages.map(message => (\n            <div \n              key={message.id}\n              className={`message-item ${message.isNew ? 'unread' : ''}`}\n              onClick={() => handleMessageClick(message)}\n            >\n              <div className=\"message-content\">\n                <div className=\"message-header\">\n                  <h3>{message.sender.name}</h3>\n                  <div className=\"message-badges\">\n                    {message.isNew && (\n                      <span className=\"new-badge\">New</span>\n                    )}\n                    <span className={`priority-badge priority-${message.priority.toLowerCase()}`}>\n                      {message.priority}\n                    </span>\n                  </div>\n                </div>\n                <p className=\"message-preview\">{message.content}</p>\n                <div className=\"message-footer\">\n                  <div className=\"platform-badges\">\n                    {message.platforms.map(platform => (\n                      <span\n                        key={platform}\n                        className=\"platform-badge\"\n                        data-platform={platform}\n                      >\n                        {platform}\n                      </span>\n                    ))}\n                  </div>\n                  <span className=\"message-time\">\n                    {message.time.toLocaleTimeString([], { \n                      hour: '2-digit', \n                      minute: '2-digit',\n                      hour12: true \n                    })}\n                  </span>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <div className=\"no-messages\">\n          <p>No conversations yet</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Helper function to generate mock messages\nconst generateMockMessages = (): Message[] => {\n  // ... existing mock data generation\n  return []; // Return your mock messages here\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}