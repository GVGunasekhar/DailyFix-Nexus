{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\swamy.LAPTOP-0RVCTRRS\\\\OneDrive\\\\Desktop\\\\Dailyfix Nexus\\\\src\\\\components\\\\ConversationView\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useState, useRef, useEffect } from 'react';\nimport { AIFeatures } from '../AIFeatures';\nimport { ConversationSettings } from '../ConversationSettings';\n\n// Add type definitions for Web Speech API\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Update the styles by removing date-related CSS\nconst styles = `\n.conversation-content {\n  padding: 16px;\n  background-color: #e5ddd5;\n  height: calc(100vh - 180px);\n  overflow-y: auto;\n}\n\n.message-history {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.message-item {\n  display: flex;\n  flex-direction: column;\n  max-width: 70%;\n}\n\n.message-item.incoming {\n  align-self: flex-start;\n}\n\n.message-item.outgoing {\n  align-self: flex-end;\n}\n\n.message-bubble {\n  padding: 8px 12px;\n  border-radius: 8px;\n  position: relative;\n  margin-bottom: 4px;\n}\n\n.message-item.incoming .message-bubble {\n  background-color: #ffffff;\n  border-top-left-radius: 0;\n}\n\n.message-item.outgoing .message-bubble {\n  background-color: #dcf8c6;\n  border-top-right-radius: 0;\n}\n\n.message-content {\n  margin-bottom: 4px;\n}\n\n.message-meta {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  font-size: 0.75rem;\n  color: #667781;\n}\n\n.platform-badge {\n  padding: 2px 6px;\n  border-radius: 4px;\n  font-size: 0.7rem;\n  background-color: rgba(0, 0, 0, 0.1);\n}\n\n.message-time {\n  font-size: 0.7rem;\n  color: #667781;\n}\n\n.header-actions {\n  display: flex;\n  gap: 8px;\n  position: relative;\n}\n\n.settings-button {\n  background: none;\n  border: none;\n  padding: 8px;\n  cursor: pointer;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: background-color 0.2s;\n  font-size: 1.5rem;\n  line-height: 1;\n  color: #666;\n}\n\n.settings-button:hover {\n  background-color: #f5f5f5;\n}\n\n.settings-button span {\n  font-size: 1.5rem;\n  font-weight: bold;\n}\n`;\nexport const ConversationView = ({\n  conversation\n}) => {\n  _s();\n  var _conversation$platfor;\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [isVoiceCommand, setIsVoiceCommand] = useState(false);\n  const [messageText, setMessageText] = useState('');\n  const [recordedAudio, setRecordedAudio] = useState(null);\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const speechRecognitionRef = useRef(null);\n  const [showSettings, setShowSettings] = useState(false);\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    // Initialize speech recognition\n    if ('SpeechRecognition' in window || 'webkitSpeechRecognition' in window) {\n      const SpeechRecognitionAPI = window.SpeechRecognition || window.webkitSpeechRecognition;\n      if (SpeechRecognitionAPI) {\n        speechRecognitionRef.current = new SpeechRecognitionAPI();\n        speechRecognitionRef.current.continuous = true;\n        speechRecognitionRef.current.interimResults = true;\n        speechRecognitionRef.current.onresult = event => {\n          const results = Array.from(event.results);\n          const transcript = results.map(result => result[0].transcript).join('');\n          if (event.results[0].isFinal) {\n            handleVoiceCommand(transcript.toLowerCase());\n          }\n        };\n        speechRecognitionRef.current.onerror = event => {\n          console.error('Speech recognition error:', event.error);\n          setIsVoiceCommand(false);\n        };\n      }\n    }\n  }, []);\n  const handleVoiceCommand = command => {\n    // Enhanced voice command handling\n    if (command.includes('tag') || command.includes('label')) {\n      var _command$split$pop;\n      const tag = (_command$split$pop = command.split(/tag|label/).pop()) === null || _command$split$pop === void 0 ? void 0 : _command$split$pop.trim();\n      if (tag) {\n        addContextualTag(tag);\n      }\n    } else if (command.includes('priority')) {\n      const level = command.toLowerCase().includes('high') ? 'High' : command.toLowerCase().includes('medium') ? 'Medium' : 'Low';\n      updatePriority(level);\n    } else if (command.includes('summarize')) {\n      generateDailySummary();\n    } else if (command.includes('suggest reply')) {\n      generateAIReply();\n    } else if (command.includes('matrix room')) {\n      handleMatrixRoom(command);\n    } else {\n      // Default to message text\n      setMessageText(command);\n    }\n    setIsVoiceCommand(false);\n  };\n  const addContextualTag = tag => {\n    // Implementation for adding contextual tags\n    if (conversation) {\n      const updatedTags = [...conversation.contextualTags, tag];\n      // Update conversation tags\n      console.log('Added tag:', tag);\n    }\n  };\n  const updatePriority = level => {\n    // Implementation for updating priority\n    if (conversation) {\n      console.log('Updated priority to:', level);\n    }\n  };\n  const generateDailySummary = async () => {\n    // Implementation for generating daily summary\n    if (conversation !== null && conversation !== void 0 && conversation.messages) {\n      // Group messages by date and generate summary\n      console.log('Generating daily summary...');\n    }\n  };\n  const generateAIReply = async () => {\n    // Implementation for AI-generated replies\n    if (conversation !== null && conversation !== void 0 && conversation.lastMessage) {\n      // Generate AI reply based on context\n      console.log('Generating AI reply...');\n    }\n  };\n  const handleMatrixRoom = command => {\n    // Implementation for Matrix.org room management\n    console.log('Handling Matrix room command:', command);\n  };\n  const startVoiceCommand = () => {\n    if (speechRecognitionRef.current) {\n      setIsVoiceCommand(true);\n      speechRecognitionRef.current.start();\n    } else {\n      alert('Speech recognition is not supported in your browser');\n    }\n  };\n  const stopVoiceCommand = () => {\n    if (speechRecognitionRef.current) {\n      speechRecognitionRef.current.stop();\n      setIsVoiceCommand(false);\n    }\n  };\n  const handleSendMessage = () => {\n    if (recordedAudio) {\n      // Handle voice message\n      console.log('Sending voice message:', recordedAudio.blob);\n      setRecordedAudio(null);\n    } else if (messageText.trim()) {\n      // Create new message object\n      const newMessage = {\n        id: Date.now().toString(),\n        text: messageText,\n        sender: 'user',\n        timestamp: new Date(),\n        platform: (conversation === null || conversation === void 0 ? void 0 : conversation.platforms[0]) || 'WhatsApp'\n      };\n\n      // Add message to history\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n\n      // Update conversation content\n      if (conversation !== null && conversation !== void 0 && conversation.platformMessages) {\n        const newPlatformMessage = {\n          platform: conversation.platforms[0],\n          messages: [messageText],\n          isFromSender: true,\n          lastActivity: new Date()\n        };\n        conversation.platformMessages.push(newPlatformMessage);\n      }\n\n      // Clear input\n      setMessageText('');\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      audioChunksRef.current = [];\n      mediaRecorder.ondataavailable = event => {\n        if (event.data.size > 0) {\n          audioChunksRef.current.push(event.data);\n        }\n      };\n      mediaRecorder.onstop = () => {\n        const audioBlob = new Blob(audioChunksRef.current, {\n          type: 'audio/wav'\n        });\n        const audioUrl = URL.createObjectURL(audioBlob);\n        setRecordedAudio({\n          blob: audioBlob,\n          url: audioUrl\n        });\n      };\n      mediaRecorder.start();\n      setIsRecording(true);\n    } catch (error) {\n      console.error('Error accessing microphone:', error);\n      alert('Unable to access microphone. Please check permissions.');\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n      setIsRecording(false);\n    }\n  };\n  const handleVoiceButtonClick = () => {\n    if (isRecording) {\n      stopRecording();\n    } else {\n      startRecording();\n    }\n  };\n  const handleSettingsClick = action => {\n    switch (action) {\n      case 'search':\n        const searchText = prompt('Enter text to search in chat:');\n        if (searchText) {\n          alert(`Searching for: ${searchText}`);\n        }\n        break;\n      case 'media':\n        alert('Opening media gallery');\n        break;\n      case 'clear':\n        if (window.confirm('Are you sure you want to clear this chat?')) {\n          alert('Chat cleared');\n        }\n        break;\n      case 'block':\n        if (window.confirm('Are you sure you want to block this contact?')) {\n          alert('Contact blocked');\n        }\n        break;\n      case 'export':\n        alert('Exporting chat...');\n        break;\n      case 'mute':\n        alert('Notifications muted');\n        break;\n    }\n    setIsSettingsOpen(false);\n  };\n  const handleAIReplySelect = reply => {\n    setMessageText(reply); // This will update the message input\n  };\n  if (!conversation) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversation-placeholder\",\n      children: \"Select a conversation to start messaging\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conversation-view\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversation-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: conversation.contact.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"platform-badges\",\n          children: conversation.platforms.map(platform => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"platform-badge\",\n            \"data-platform\": platform,\n            children: platform\n          }, platform, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"settings-button\",\n          onClick: e => {\n            e.stopPropagation();\n            setShowSettings(!showSettings);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"settings\",\n            children: \"\\u22EE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), showSettings && /*#__PURE__*/_jsxDEV(ConversationSettings, {\n          onClose: () => setShowSettings(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversation-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-history\",\n        children: [conversation === null || conversation === void 0 ? void 0 : (_conversation$platfor = conversation.platformMessages) === null || _conversation$platfor === void 0 ? void 0 : _conversation$platfor.sort((a, b) => a.lastActivity.getTime() - b.lastActivity.getTime()).map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-item ${msg.isFromSender ? 'outgoing' : 'incoming'}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-bubble\",\n            children: [msg.messages.map((text, msgIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: text\n            }, msgIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 21\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-time\",\n                children: msg.lastActivity.toLocaleTimeString([], {\n                  hour: '2-digit',\n                  minute: '2-digit',\n                  hour12: true\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"platform-badge\",\n                \"data-platform\": msg.platform,\n                children: msg.platform\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 17\n          }, this)\n        }, `${msg.platform}-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 15\n        }, this)), messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-item outgoing\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-bubble\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message-time\",\n                children: message.timestamp.toLocaleTimeString([], {\n                  hour: '2-digit',\n                  minute: '2-digit',\n                  hour12: true\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"platform-badge\",\n                \"data-platform\": message.platform,\n                children: message.platform\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 15\n          }, this)\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AIFeatures, {\n      conversation: conversation,\n      onReplySelect: handleAIReplySelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-input-container\",\n      children: [recordedAudio ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recorded-audio\",\n        children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n          src: recordedAudio.url,\n          controls: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-audio\",\n          onClick: () => setRecordedAudio(null),\n          title: \"Cancel\",\n          children: \"\\u274C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: `message-input ${isVoiceCommand ? 'voice-active' : ''}`,\n          placeholder: isVoiceCommand ? 'Listening for voice command...' : 'Type a message or use voice command...',\n          value: messageText,\n          onChange: e => setMessageText(e.target.value),\n          onKeyPress: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `voice-command-button ${isVoiceCommand ? 'active' : ''}`,\n          title: isVoiceCommand ? 'Stop Voice Command' : 'Start Voice Command',\n          onClick: () => isVoiceCommand ? stopVoiceCommand() : startVoiceCommand(),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"voice-command\",\n            children: isVoiceCommand ? '🎙️' : '🗣️'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `voice-button ${isRecording ? 'recording' : ''}`,\n        title: isRecording ? 'Stop Recording' : 'Start Voice Recording',\n        onClick: handleVoiceButtonClick,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"voice\",\n          children: isRecording ? '⏹️' : '🎤'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `send-button ${messageText.trim() || recordedAudio ? 'active' : ''}`,\n        onClick: handleSendMessage,\n        disabled: !messageText.trim() && !recordedAudio,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"send\",\n          children: \"\\uD83D\\uDCE4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 415,\n    columnNumber: 5\n  }, this);\n};\n\n// Helper function to generate AI replies (mock implementation)\n_s(ConversationView, \"WDcn4+eBTArswxlNG2dx2x/w73U=\");\n_c = ConversationView;\nconst generateAIReplies = async messages => {\n  // In a real implementation, this would call your AI service\n  const commonReplies = [\"I'll look into this and get back to you shortly\", \"Thanks for bringing this to my attention\", \"Could you clarify your requirements?\", \"Let me check with the team and update you\", \"I understand, I'll prioritize this task\", \"Would you like to schedule a call to discuss this?\"];\n\n  // Simulate API delay\n  await new Promise(resolve => setTimeout(resolve, 1000));\n\n  // Return 3 random replies\n  return commonReplies.sort(() => Math.random() - 0.5).slice(0, 3);\n};\nvar _c;\n$RefreshReg$(_c, \"ConversationView\");","map":{"version":3,"names":["React","useState","useRef","useEffect","AIFeatures","ConversationSettings","jsxDEV","_jsxDEV","Fragment","_Fragment","styles","ConversationView","conversation","_s","_conversation$platfor","isSettingsOpen","setIsSettingsOpen","isRecording","setIsRecording","isVoiceCommand","setIsVoiceCommand","messageText","setMessageText","recordedAudio","setRecordedAudio","mediaRecorderRef","audioChunksRef","speechRecognitionRef","showSettings","setShowSettings","messages","setMessages","window","SpeechRecognitionAPI","SpeechRecognition","webkitSpeechRecognition","current","continuous","interimResults","onresult","event","results","Array","from","transcript","map","result","join","isFinal","handleVoiceCommand","toLowerCase","onerror","console","error","command","includes","_command$split$pop","tag","split","pop","trim","addContextualTag","level","updatePriority","generateDailySummary","generateAIReply","handleMatrixRoom","updatedTags","contextualTags","log","lastMessage","startVoiceCommand","start","alert","stopVoiceCommand","stop","handleSendMessage","blob","newMessage","id","Date","now","toString","text","sender","timestamp","platform","platforms","prevMessages","platformMessages","newPlatformMessage","isFromSender","lastActivity","push","handleKeyPress","e","key","shiftKey","preventDefault","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","mediaRecorder","MediaRecorder","ondataavailable","data","size","onstop","audioBlob","Blob","type","audioUrl","URL","createObjectURL","url","stopRecording","getTracks","forEach","track","handleVoiceButtonClick","handleSettingsClick","action","searchText","prompt","confirm","handleAIReplySelect","reply","className","children","fileName","_jsxFileName","lineNumber","columnNumber","contact","name","onClick","stopPropagation","role","onClose","sort","a","b","getTime","msg","index","msgIndex","toLocaleTimeString","hour","minute","hour12","message","onReplySelect","src","controls","title","placeholder","value","onChange","target","onKeyPress","disabled","_c","generateAIReplies","commonReplies","Promise","resolve","setTimeout","Math","random","slice","$RefreshReg$"],"sources":["C:/Users/swamy.LAPTOP-0RVCTRRS/OneDrive/Desktop/Dailyfix Nexus/src/components/ConversationView/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useState, useRef, useEffect } from 'react';\nimport { AIFeatures } from '../AIFeatures';\nimport type { Conversation, PlatformMessage, PriorityLevel } from '../../types/conversation';\nimport { ConversationSettings } from '../ConversationSettings';\n\n// Add type definitions for Web Speech API\ninterface SpeechRecognitionEvent extends Event {\n  results: SpeechRecognitionResultList;\n  resultIndex: number;\n}\n\ninterface SpeechRecognitionError extends Event {\n  error: string;\n  message: string;\n}\n\ninterface SpeechRecognitionResult {\n  isFinal: boolean;\n  [index: number]: SpeechRecognitionAlternative;\n}\n\ninterface SpeechRecognitionAlternative {\n  transcript: string;\n  confidence: number;\n}\n\ninterface SpeechRecognitionResultList {\n  length: number;\n  item(index: number): SpeechRecognitionResult;\n  [index: number]: SpeechRecognitionResult;\n}\n\ninterface SpeechRecognition extends EventTarget {\n  continuous: boolean;\n  interimResults: boolean;\n  lang: string;\n  onresult: (event: SpeechRecognitionEvent) => void;\n  onerror: (event: SpeechRecognitionError) => void;\n  start(): void;\n  stop(): void;\n  abort(): void;\n}\n\ninterface SpeechRecognitionConstructor {\n  new (): SpeechRecognition;\n}\n\ndeclare global {\n  interface Window {\n    SpeechRecognition?: SpeechRecognitionConstructor;\n    webkitSpeechRecognition?: SpeechRecognitionConstructor;\n  }\n}\n\ninterface Message {\n  id: string;\n  text: string;\n  sender: 'user' | 'contact';\n  timestamp: Date;\n  platform: string;\n}\n\ninterface ConversationViewProps {\n  conversation: Conversation | null;\n}\n\n// Update the styles by removing date-related CSS\nconst styles = `\n.conversation-content {\n  padding: 16px;\n  background-color: #e5ddd5;\n  height: calc(100vh - 180px);\n  overflow-y: auto;\n}\n\n.message-history {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n}\n\n.message-item {\n  display: flex;\n  flex-direction: column;\n  max-width: 70%;\n}\n\n.message-item.incoming {\n  align-self: flex-start;\n}\n\n.message-item.outgoing {\n  align-self: flex-end;\n}\n\n.message-bubble {\n  padding: 8px 12px;\n  border-radius: 8px;\n  position: relative;\n  margin-bottom: 4px;\n}\n\n.message-item.incoming .message-bubble {\n  background-color: #ffffff;\n  border-top-left-radius: 0;\n}\n\n.message-item.outgoing .message-bubble {\n  background-color: #dcf8c6;\n  border-top-right-radius: 0;\n}\n\n.message-content {\n  margin-bottom: 4px;\n}\n\n.message-meta {\n  display: flex;\n  align-items: center;\n  gap: 4px;\n  font-size: 0.75rem;\n  color: #667781;\n}\n\n.platform-badge {\n  padding: 2px 6px;\n  border-radius: 4px;\n  font-size: 0.7rem;\n  background-color: rgba(0, 0, 0, 0.1);\n}\n\n.message-time {\n  font-size: 0.7rem;\n  color: #667781;\n}\n\n.header-actions {\n  display: flex;\n  gap: 8px;\n  position: relative;\n}\n\n.settings-button {\n  background: none;\n  border: none;\n  padding: 8px;\n  cursor: pointer;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: background-color 0.2s;\n  font-size: 1.5rem;\n  line-height: 1;\n  color: #666;\n}\n\n.settings-button:hover {\n  background-color: #f5f5f5;\n}\n\n.settings-button span {\n  font-size: 1.5rem;\n  font-weight: bold;\n}\n`;\n\nexport const ConversationView: React.FC<ConversationViewProps> = ({ conversation }) => {\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [isVoiceCommand, setIsVoiceCommand] = useState(false);\n  const [messageText, setMessageText] = useState('');\n  const [recordedAudio, setRecordedAudio] = useState<{ blob: Blob; url: string } | null>(null);\n  const mediaRecorderRef = useRef<MediaRecorder | null>(null);\n  const audioChunksRef = useRef<Blob[]>([]);\n  const speechRecognitionRef = useRef<SpeechRecognition | null>(null);\n  const [showSettings, setShowSettings] = useState(false);\n  const [messages, setMessages] = useState<Message[]>([]);\n\n  useEffect(() => {\n    // Initialize speech recognition\n    if ('SpeechRecognition' in window || 'webkitSpeechRecognition' in window) {\n      const SpeechRecognitionAPI = window.SpeechRecognition || window.webkitSpeechRecognition;\n      if (SpeechRecognitionAPI) {\n        speechRecognitionRef.current = new SpeechRecognitionAPI();\n        speechRecognitionRef.current.continuous = true;\n        speechRecognitionRef.current.interimResults = true;\n\n        speechRecognitionRef.current.onresult = (event: SpeechRecognitionEvent) => {\n          const results = Array.from(event.results);\n          const transcript = results\n            .map(result => result[0].transcript)\n            .join('');\n\n          if (event.results[0].isFinal) {\n            handleVoiceCommand(transcript.toLowerCase());\n          }\n        };\n\n        speechRecognitionRef.current.onerror = (event: SpeechRecognitionError) => {\n          console.error('Speech recognition error:', event.error);\n          setIsVoiceCommand(false);\n        };\n      }\n    }\n  }, []);\n\n  const handleVoiceCommand = (command: string) => {\n    // Enhanced voice command handling\n    if (command.includes('tag') || command.includes('label')) {\n      const tag = command.split(/tag|label/).pop()?.trim();\n      if (tag) {\n        addContextualTag(tag);\n      }\n    } else if (command.includes('priority')) {\n      const level = command.toLowerCase().includes('high') ? 'High' :\n                   command.toLowerCase().includes('medium') ? 'Medium' : 'Low';\n      updatePriority(level);\n    } else if (command.includes('summarize')) {\n      generateDailySummary();\n    } else if (command.includes('suggest reply')) {\n      generateAIReply();\n    } else if (command.includes('matrix room')) {\n      handleMatrixRoom(command);\n    } else {\n      // Default to message text\n      setMessageText(command);\n    }\n    setIsVoiceCommand(false);\n  };\n\n  const addContextualTag = (tag: string) => {\n    // Implementation for adding contextual tags\n    if (conversation) {\n      const updatedTags = [...conversation.contextualTags, tag];\n      // Update conversation tags\n      console.log('Added tag:', tag);\n    }\n  };\n\n  const updatePriority = (level: PriorityLevel) => {\n    // Implementation for updating priority\n    if (conversation) {\n      console.log('Updated priority to:', level);\n    }\n  };\n\n  const generateDailySummary = async () => {\n    // Implementation for generating daily summary\n    if (conversation?.messages) {\n      // Group messages by date and generate summary\n      console.log('Generating daily summary...');\n    }\n  };\n\n  const generateAIReply = async () => {\n    // Implementation for AI-generated replies\n    if (conversation?.lastMessage) {\n      // Generate AI reply based on context\n      console.log('Generating AI reply...');\n    }\n  };\n\n  const handleMatrixRoom = (command: string) => {\n    // Implementation for Matrix.org room management\n    console.log('Handling Matrix room command:', command);\n  };\n\n  const startVoiceCommand = () => {\n    if (speechRecognitionRef.current) {\n      setIsVoiceCommand(true);\n      speechRecognitionRef.current.start();\n    } else {\n      alert('Speech recognition is not supported in your browser');\n    }\n  };\n\n  const stopVoiceCommand = () => {\n    if (speechRecognitionRef.current) {\n      speechRecognitionRef.current.stop();\n      setIsVoiceCommand(false);\n    }\n  };\n\n  const handleSendMessage = () => {\n    if (recordedAudio) {\n      // Handle voice message\n      console.log('Sending voice message:', recordedAudio.blob);\n      setRecordedAudio(null);\n    } else if (messageText.trim()) {\n      // Create new message object\n      const newMessage = {\n        id: Date.now().toString(),\n        text: messageText,\n        sender: 'user' as const,\n        timestamp: new Date(),\n        platform: conversation?.platforms[0] || 'WhatsApp'\n      };\n\n      // Add message to history\n      setMessages(prevMessages => [...prevMessages, newMessage]);\n\n      // Update conversation content\n      if (conversation?.platformMessages) {\n        const newPlatformMessage = {\n          platform: conversation.platforms[0],\n          messages: [messageText],\n          isFromSender: true,\n          lastActivity: new Date()\n        };\n\n        conversation.platformMessages.push(newPlatformMessage);\n      }\n\n      // Clear input\n      setMessageText('');\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      audioChunksRef.current = [];\n\n      mediaRecorder.ondataavailable = (event) => {\n        if (event.data.size > 0) {\n          audioChunksRef.current.push(event.data);\n        }\n      };\n\n      mediaRecorder.onstop = () => {\n        const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/wav' });\n        const audioUrl = URL.createObjectURL(audioBlob);\n        setRecordedAudio({ blob: audioBlob, url: audioUrl });\n      };\n\n      mediaRecorder.start();\n      setIsRecording(true);\n    } catch (error) {\n      console.error('Error accessing microphone:', error);\n      alert('Unable to access microphone. Please check permissions.');\n    }\n  };\n\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n      setIsRecording(false);\n    }\n  };\n\n  const handleVoiceButtonClick = () => {\n    if (isRecording) {\n      stopRecording();\n    } else {\n      startRecording();\n    }\n  };\n\n  const handleSettingsClick = (action: string) => {\n    switch (action) {\n      case 'search':\n        const searchText = prompt('Enter text to search in chat:');\n        if (searchText) {\n          alert(`Searching for: ${searchText}`);\n        }\n        break;\n      case 'media':\n        alert('Opening media gallery');\n        break;\n      case 'clear':\n        if (window.confirm('Are you sure you want to clear this chat?')) {\n          alert('Chat cleared');\n        }\n        break;\n      case 'block':\n        if (window.confirm('Are you sure you want to block this contact?')) {\n          alert('Contact blocked');\n        }\n        break;\n      case 'export':\n        alert('Exporting chat...');\n        break;\n      case 'mute':\n        alert('Notifications muted');\n        break;\n    }\n    setIsSettingsOpen(false);\n  };\n\n  const handleAIReplySelect = (reply: string) => {\n    setMessageText(reply); // This will update the message input\n  };\n\n  if (!conversation) {\n    return (\n      <div className=\"conversation-placeholder\">\n        Select a conversation to start messaging\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"conversation-view\">\n      <div className=\"conversation-header\">\n        <div className=\"header-left\">\n          <h2>{conversation.contact.name}</h2>\n          <div className=\"platform-badges\">\n            {conversation.platforms.map(platform => (\n              <span \n                key={platform} \n                className=\"platform-badge\"\n                data-platform={platform}\n              >\n                {platform}\n              </span>\n            ))}\n          </div>\n        </div>\n        <div className=\"header-actions\">\n          <button \n            className=\"settings-button\"\n            onClick={(e) => {\n              e.stopPropagation();\n              setShowSettings(!showSettings);\n            }}\n          >\n            <span role=\"img\" aria-label=\"settings\">⋮</span>\n          </button>\n          {showSettings && (\n            <ConversationSettings onClose={() => setShowSettings(false)} />\n          )}\n        </div>\n      </div>\n      \n      <div className=\"conversation-content\">\n        <div className=\"message-history\">\n          {conversation?.platformMessages\n            ?.sort((a, b) => a.lastActivity.getTime() - b.lastActivity.getTime())\n            .map((msg, index) => (\n              <div \n                key={`${msg.platform}-${index}`}\n                className={`message-item ${msg.isFromSender ? 'outgoing' : 'incoming'}`}\n              >\n                <div className=\"message-bubble\">\n                  {msg.messages.map((text, msgIndex) => (\n                    <div key={msgIndex} className=\"message-content\">\n                      {text}\n                    </div>\n                  ))}\n                  <div className=\"message-meta\">\n                    <span className=\"message-time\">\n                      {msg.lastActivity.toLocaleTimeString([], { \n                        hour: '2-digit',\n                        minute: '2-digit',\n                        hour12: true\n                      })}\n                    </span>\n                    <span \n                      className=\"platform-badge\"\n                      data-platform={msg.platform}\n                    >\n                      {msg.platform}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            ))}\n\n          {messages.map(message => (\n            <div \n              key={message.id}\n              className=\"message-item outgoing\"\n            >\n              <div className=\"message-bubble\">\n                <div className=\"message-content\">\n                  {message.text}\n                </div>\n                <div className=\"message-meta\">\n                  <span className=\"message-time\">\n                    {message.timestamp.toLocaleTimeString([], { \n                      hour: '2-digit',\n                      minute: '2-digit',\n                      hour12: true \n                    })}\n                  </span>\n                  <span \n                    className=\"platform-badge\"\n                    data-platform={message.platform}\n                  >\n                    {message.platform}\n                  </span>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <AIFeatures \n        conversation={conversation} \n        onReplySelect={handleAIReplySelect}\n      />\n\n      <div className=\"message-input-container\">\n        {recordedAudio ? (\n          <div className=\"recorded-audio\">\n            <audio src={recordedAudio.url} controls />\n            <button \n              className=\"cancel-audio\"\n              onClick={() => setRecordedAudio(null)}\n              title=\"Cancel\"\n            >\n              ❌\n            </button>\n          </div>\n        ) : (\n          <>\n            <input \n              type=\"text\" \n              className={`message-input ${isVoiceCommand ? 'voice-active' : ''}`}\n              placeholder={isVoiceCommand ? 'Listening for voice command...' : 'Type a message or use voice command...'}\n              value={messageText}\n              onChange={(e) => setMessageText(e.target.value)}\n              onKeyPress={handleKeyPress}\n            />\n            <button \n              className={`voice-command-button ${isVoiceCommand ? 'active' : ''}`}\n              title={isVoiceCommand ? 'Stop Voice Command' : 'Start Voice Command'}\n              onClick={() => isVoiceCommand ? stopVoiceCommand() : startVoiceCommand()}\n            >\n              <span role=\"img\" aria-label=\"voice-command\">\n                {isVoiceCommand ? '🎙️' : '🗣️'}\n              </span>\n            </button>\n          </>\n        )}\n        <button \n          className={`voice-button ${isRecording ? 'recording' : ''}`}\n          title={isRecording ? 'Stop Recording' : 'Start Voice Recording'}\n          onClick={handleVoiceButtonClick}\n        >\n          <span role=\"img\" aria-label=\"voice\">\n            {isRecording ? '⏹️' : '🎤'}\n          </span>\n        </button>\n        <button \n          className={`send-button ${(messageText.trim() || recordedAudio) ? 'active' : ''}`}\n          onClick={handleSendMessage}\n          disabled={!messageText.trim() && !recordedAudio}\n        >\n          <span role=\"img\" aria-label=\"send\">📤</span>\n        </button>\n      </div>\n    </div>\n  );\n};\n\n// Helper function to generate AI replies (mock implementation)\nconst generateAIReplies = async (messages: any[]): Promise<string[]> => {\n  // In a real implementation, this would call your AI service\n  const commonReplies = [\n    \"I'll look into this and get back to you shortly\",\n    \"Thanks for bringing this to my attention\",\n    \"Could you clarify your requirements?\",\n    \"Let me check with the team and update you\",\n    \"I understand, I'll prioritize this task\",\n    \"Would you like to schedule a call to discuss this?\",\n  ];\n  \n  // Simulate API delay\n  await new Promise(resolve => setTimeout(resolve, 1000));\n  \n  // Return 3 random replies\n  return commonReplies\n    .sort(() => Math.random() - 0.5)\n    .slice(0, 3);\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}